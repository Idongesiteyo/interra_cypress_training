# Name of the GitHub Actions workflow
name: Cypress Tests

# Define when this workflow should be triggered
on:
  # Trigger on push events
  push:
    branches:
      - main      # Run when pushing to main branch
      - staging   # Run when pushing to staging branch
  # Trigger on pull request events
  pull_request:
    branches:
      - main      # Run when PR is targeted at main branch
      - staging   # Run when PR is targeted at staging branch

# Define the jobs to be executed
jobs:
  cypress-tests:
    name: Run Cypress Tests              # Display name for the job
    runs-on: ubuntu-latest              # Use latest Ubuntu runner

    # Define a matrix strategy to run tests on multiple browsers
    strategy:
      matrix:
        browser: [chrome, edge]         # Run tests on Chrome and Edge

    # Define the sequence of steps to be executed
    steps:
      # Step 1: Check out the repository code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18              # Use Node.js version 18

      # Step 3: Install project dependencies
      - name: Install Dependencies
        run: npm ci                     # Clean install of dependencies

      # Step 4: Install Cypress
      - name: Install Cypress
        run: npx cypress install

      # Step 5: Set executable permissions for Cypress binary
      - name: Grant Permissions
        run: chmod +x ./node_modules/.bin/cypress

      # Step 6: Run Cypress Tests
      - name: Run Cypress Tests on ${{ matrix.browser }}
        run: |
          # Initialize branch name variable
          BRANCH_NAME=""
          
          # Determine the branch name based on event type
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH_NAME="${{ github.base_ref }}"    # Use target branch for PRs
          else
            BRANCH_NAME="${{ github.ref_name }}"    # Use current branch for pushes
          fi

          # Execute different test suites based on branch
          if [ "$BRANCH_NAME" = "staging" ]; then
            # Run smoke tests only on staging
            echo "Running smoke tests on staging branch..."
            npx cypress run \
              --browser ${{ matrix.browser }} \
              --env grep=@smoke \                    # Filter for smoke tests
              reportDir=cypress/reports,reportFilename=index.html
          elif [ "$BRANCH_NAME" = "main" ]; then
            # Run full test suite on main
            echo "Running full test suite on main branch..."
            npx cypress run \
              --browser ${{ matrix.browser }} \
              reportDir=cypress/reports,reportFilename=index.html
          else
            # Exit with error for undefined branches
            echo "Branch $BRANCH_NAME not configured for testing"
            exit 1
          fi

      # Step 7: Save test results as artifacts
      - name: Archive Mochawesome Report
        if: always()                    # Run this step regardless of test results
        uses: actions/upload-artifact@v3
        with:
          # Create unique artifact name using browser and commit SHA
          name: mochawesome-report-${{ matrix.browser }}-${{ github.sha }}
          path: cypress/reports/        # Location of test reports